// <auto-generated />
using System;
using Kindergarten.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kindergarten.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupTeacher", b =>
                {
                    b.Property<long>("GroupsId")
                        .HasColumnType("bigint");

                    b.Property<long>("TeachersId")
                        .HasColumnType("bigint");

                    b.HasKey("GroupsId", "TeachersId");

                    b.HasIndex("TeachersId");

                    b.ToTable("GroupTeacher");
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Admins.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "testemail1",
                            Name = "test1",
                            Password = "test1"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "testemail2",
                            Name = "test2",
                            Password = "test2"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "testemail3",
                            Name = "test3",
                            Password = "test3"
                        });
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Employees.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "test1",
                            FullName = "test1",
                            Gender = 1,
                            PhoneNumber = "test1"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "test2",
                            FullName = "test2",
                            Gender = 2,
                            PhoneNumber = "test2"
                        },
                        new
                        {
                            Id = 3L,
                            Email = "test3",
                            FullName = "test3",
                            Gender = 1,
                            PhoneNumber = "test3"
                        });
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Groups.Group", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AgeGroup")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AgeGroup = 3L,
                            Description = "Description1",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            Name = "test1",
                            StartDate = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(4644)
                        },
                        new
                        {
                            Id = 2L,
                            AgeGroup = 2L,
                            Description = "Description2",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            Name = "test2",
                            StartDate = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(4648)
                        },
                        new
                        {
                            Id = 3L,
                            AgeGroup = 1L,
                            Description = "Description3",
                            EndDate = new DateTime(9999, 12, 31, 23, 59, 59, 999, DateTimeKind.Unspecified).AddTicks(9999),
                            Name = "test3",
                            StartDate = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(4650)
                        });
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Parents.Parent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FatherFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("MotherFullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PassportSeriaNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Parents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "test1",
                            Email = "test1",
                            FatherFullName = "test1",
                            MotherFullName = "test1",
                            PassportSeriaNumber = "test1",
                            PhoneNumber = "test1"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "test2",
                            Email = "test3",
                            FatherFullName = "test3",
                            MotherFullName = "test3",
                            PassportSeriaNumber = "test3",
                            PhoneNumber = "test3"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "test3",
                            Email = "test3",
                            FatherFullName = "test3",
                            MotherFullName = "test3",
                            PassportSeriaNumber = "test3",
                            PhoneNumber = "test3"
                        });
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Students.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<long>("GroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "test1",
                            DateOfBirth = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9846),
                            FullName = "test1",
                            Gender = 1,
                            GroupId = 1L,
                            ParentId = 2L,
                            RegisteredAt = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9845)
                        },
                        new
                        {
                            Id = 2L,
                            Address = "test2",
                            DateOfBirth = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9850),
                            FullName = "test2",
                            Gender = 2,
                            GroupId = 1L,
                            ParentId = 2L,
                            RegisteredAt = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9850)
                        },
                        new
                        {
                            Id = 3L,
                            Address = "test3",
                            DateOfBirth = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9852),
                            FullName = "test3",
                            Gender = 1,
                            GroupId = 1L,
                            ParentId = 2L,
                            RegisteredAt = new DateTime(2023, 12, 11, 15, 16, 33, 577, DateTimeKind.Utc).AddTicks(9852)
                        });
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Teachers.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "test1",
                            Email = "test1",
                            FullName = "test1",
                            PhoneNumber = "test1"
                        },
                        new
                        {
                            Id = 2L,
                            Address = "test2",
                            Email = "test2",
                            FullName = "test2",
                            PhoneNumber = "test2"
                        },
                        new
                        {
                            Id = 3L,
                            Address = "test3",
                            Email = "test3",
                            FullName = "test3",
                            PhoneNumber = "test3"
                        });
                });

            modelBuilder.Entity("GroupTeacher", b =>
                {
                    b.HasOne("Kindergarten.Domain.Entities.Groups.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kindergarten.Domain.Entities.Teachers.Teacher", null)
                        .WithMany()
                        .HasForeignKey("TeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Students.Student", b =>
                {
                    b.HasOne("Kindergarten.Domain.Entities.Groups.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kindergarten.Domain.Entities.Parents.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Groups.Group", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Kindergarten.Domain.Entities.Parents.Parent", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
