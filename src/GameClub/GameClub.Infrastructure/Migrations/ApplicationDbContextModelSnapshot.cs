// <auto-generated />
using System;
using GameClub.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GameClub.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GameClub.Domain.Entities.Admin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "test1",
                            Password = "test1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "test2",
                            Password = "test2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "test3",
                            Password = "test3"
                        });
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Computer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<double>("PriceOfHour")
                        .HasColumnType("double precision");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Version")
                        .IsUnique();

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "test1",
                            PriceOfHour = 10.0,
                            Version = "1.0"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "test2",
                            PriceOfHour = 11.0,
                            Version = "2.0"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "test3",
                            PriceOfHour = 12.0,
                            Version = "3.0"
                        });
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ComputerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("HoursCount")
                        .HasColumnType("bigint");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ComputerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ComputerId = 2L,
                            EndDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4013),
                            HoursCount = 1L,
                            NickName = "test1",
                            StartDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4013)
                        },
                        new
                        {
                            Id = 2L,
                            ComputerId = 2L,
                            EndDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4019),
                            HoursCount = 1L,
                            NickName = "test1",
                            StartDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4018)
                        },
                        new
                        {
                            Id = 3L,
                            ComputerId = 2L,
                            EndDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4023),
                            HoursCount = 1L,
                            NickName = "test1",
                            StartDate = new DateTime(2023, 12, 11, 14, 18, 12, 914, DateTimeKind.Utc).AddTicks(4023)
                        });
                });

            modelBuilder.Entity("GameClub.Domain.Entities.ScheduleOfChanges", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AdminId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("PlayerId");

                    b.ToTable("ScheduleOfChanges");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AdminId = 2L,
                            Description = "test1",
                            PlayerId = 1L,
                            Status = 0,
                            TotalPrice = 12.0
                        },
                        new
                        {
                            Id = 2L,
                            AdminId = 2L,
                            Description = "test2",
                            PlayerId = 1L,
                            Status = 0,
                            TotalPrice = 12.0
                        },
                        new
                        {
                            Id = 3L,
                            AdminId = 2L,
                            Description = "test3",
                            PlayerId = 1L,
                            Status = 2,
                            TotalPrice = 12.0
                        });
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Player", b =>
                {
                    b.HasOne("GameClub.Domain.Entities.Computer", "Computer")
                        .WithMany("Players")
                        .HasForeignKey("ComputerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Computer");
                });

            modelBuilder.Entity("GameClub.Domain.Entities.ScheduleOfChanges", b =>
                {
                    b.HasOne("GameClub.Domain.Entities.Admin", "Admin")
                        .WithMany("ScheduleOfChanges")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameClub.Domain.Entities.Player", "Player")
                        .WithMany("ScheduleOfChanges")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Admin", b =>
                {
                    b.Navigation("ScheduleOfChanges");
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Computer", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("GameClub.Domain.Entities.Player", b =>
                {
                    b.Navigation("ScheduleOfChanges");
                });
#pragma warning restore 612, 618
        }
    }
}
